{"ast":null,"code":"import axios from \"axios\"; // 第一步，创建实例\n\nconst service = axios.create({\n  baseURL: 'devApi',\n  timeout: 5000\n}); // 第二部， 添加请求拦截器\n\nservice.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 第三步，添加响应拦截器\n\nservice.interceptors.response.use(function (response) {\n  // 对响应数据做些什么\n  return response;\n}, function (error) {\n  // 对响应错误做些什么\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","service","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response"],"sources":["D:/react-人事管理后台/react-admin/src/utils/request.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n// 第一步，创建实例\r\nconst service = axios.create({\r\n    baseURL: 'devApi',\r\n    timeout: 5000\r\n})\r\n\r\n// 第二部， 添加请求拦截器\r\nservice.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    return config;\r\n  }, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n  })\r\n\r\n// 第三步，添加响应拦截器\r\nservice.interceptors.response.use(function (response) {\r\n    // 对响应数据做些什么\r\n    return response;\r\n  }, function (error) {\r\n    // 对响应错误做些什么\r\n    return Promise.reject(error);\r\n  })\r\n\r\nexport default service"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;EACzBC,OAAO,EAAE,QADgB;EAEzBC,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAUC,MAAV,EAAkB;EAC/C;EACA,OAAOA,MAAP;AACD,CAHH,EAGK,UAAUC,KAAV,EAAiB;EAClB;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH,E,CAQA;;AACAR,OAAO,CAACI,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CAAkC,UAAUK,QAAV,EAAoB;EAClD;EACA,OAAOA,QAAP;AACD,CAHH,EAGK,UAAUH,KAAV,EAAiB;EAClB;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH;AAQA,eAAeR,OAAf"},"metadata":{},"sourceType":"module"}